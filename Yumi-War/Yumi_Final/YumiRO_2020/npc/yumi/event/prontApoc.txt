lhz_dun04,247,60,4	script	Quest Dungeon Helper	512,{
	// Monster ID / Amount Initiating ( Check db/Mob_db.txt || db/Mob_db2.txt )
	setarray .Stage[0],
				2223,300,
				2237,1;				// ( Mini Boss )

	setarray .Stage2[0],
				2222,300,			// Slave
				2236,1;				// Mini boss
				
	setarray .Stage3[0],
				2224,300,			// Slave
				2238,1;				// Mini boss

	setarray .Stage4[0],
				2226,300,			// Slave
				2240,1;				// Mini boss

	setarray .Stage5[0],
				2221,300,			// Slave
				2235,1;				// Mini boss

	setarray .Boss[0],
				2320,1;			// Big boss

	// Reward ID / Amount Initiating ( Check db/Item_db.txt || db/Item_db2.txt )						
	setarray .Reward[0],
				512,1;				// Boss reward
			
	// MapFlags Initiating ( Check db/Cont.txt )		
	setarray .MapFlags[0],0,1,2,3,4,5,11,13,14,15,22,29,30,31,32,33,34,35,38,41,43,44,47,49;

	for( set .@mf,0; .@mf < getarraysize( .MapFlags ); set .@mf,.@mf + 1 )
	{
		setmapflag strcharinfo(3),.MapFlags[.@mf];
	}	
	if( mobcount( strcharinfo(3),"all" ) > 0 || .Level > 0)
	{
		dispbottom "Some monsters are still alive. Please, kill them all!";
		end;
	}
	set .Level,0;
	announce "The Stage number 1 has begun!",bc_map,0x66FF33,0,35;
	announce "["+.Stage[.Level+1]+" x "+getmonsterinfo( .Stage[.Level],0)+"]",bc_map,0xCCFF33;
	monster strcharinfo(3),0,0,"[Slave] "+getmonsterinfo( .Stage[.Level],0)+"",.Stage[.Level],.Stage[.Level+1],strnpcinfo(0)+"::OnMob1stKill";
	delwaitingroom;
	waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
	end;

OnMob1stKill:
	delwaitingroom;
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnMob1stKill" ) == 0 && .Level < ( getarraysize( .Stage ) - 5 ) )
	{
		set .Level,.Level + 2;
		waitingroom "["+((( getarraysize( .Stage )/2 ) - .Level/2) - 1)+"] rounds to go.",0;
		for( set .@t,5; .@t > 0; set .@t,.@t - 1 )
		{
			announce "New defenders will be summoned in "+.@t+" second(s)",bc_map,0xFFCC33,0,35;
			sleep2 1000;
		}
		announce "["+.Stage[.Level+1]+" x "+getmonsterinfo( .Stage[.Level],0)+"]",bc_map,0xCCFF33;
		monster strcharinfo(3),0,0,"[Slave] "+getmonsterinfo( .Stage[.Level],0)+"",.Stage[.Level],.Stage[.Level+1],strnpcinfo(0)+"::OnMob1stKill";
	}
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnMob1stKill" ) == 0 && .Level >= ( getarraysize( .Stage ) - 5 ) )
	{
		set .Level,.Level + 2;
		announce "A protector of the first God is about to be summoned!",bc_map,0xFF0000,0,90;
		specialeffect 563;
		sleep2 2000;
		for( set .@t,5; .@t > 0; set .@t,.@t - 1 )
		{
			specialeffect 563;
			announce "The protector of the first God will be summoned in "+.@t+" second(s)",bc_map,0xFF6633,0,60;
			sleep2 1000;
		}
		announce "["+.Stage[.Level+1]+" x "+getmonsterinfo( .Stage[.Level],0)+"]",bc_map,0xCCFF33;
		monster strcharinfo(3),0,0,"[God's Guard] "+getmonsterinfo( .Stage[.Level],0)+"",.Stage[.Level],.Stage[.Level+1],strnpcinfo(0)+"::OnBoss1stKill";
	}
	delwaitingroom;
	waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
	end;

OnBoss1stKill:
	delwaitingroom;
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnBoss1stKill" ) > 0 )
	{
		waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
		end;
	} else {
		goto OnMob2ndInit;
		end;
	}

OnMob2ndInit:
	set .Level,0;
	announce "The Stage number 2 has begun!",bc_map,0x66FF33,0,35;
	announce "["+.Stage2[.Level+1]+" x "+getmonsterinfo( .Stage2[.Level],0)+"]",bc_map,0xCCFF33;
	monster strcharinfo(3),0,0,"[Slave] "+getmonsterinfo( .Stage2[.Level],0)+"",.Stage2[.Level],.Stage2[.Level+1],strnpcinfo(0)+"::OnMob2ndKill";
	delwaitingroom;
	waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
	end;

OnMob2ndKill:
	delwaitingroom;
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnMob2ndKill" ) == 0 && .Level < ( getarraysize( .Stage2 ) - 5 ) )
	{
		set .Level,.Level + 2;
		waitingroom "["+((( getarraysize( .Stage2 )/2 ) - .Level/2) - 1)+"] Rounds to go.",0;
		for( set .@t,5; .@t > 0; set .@t,.@t - 1 )
		{
			announce "New defenders will be summoned in "+.@t+" second(s)",bc_map,0x66FF33,0,35;
			sleep2 1000;
		}
		announce "["+.Stage2[.Level+1]+" x "+getmonsterinfo( .Stage2[.Level],0)+"]",bc_map,0xCCFF33;
		monster strcharinfo(3),0,0,"[Slave] "+getmonsterinfo( .Stage2[.Level],0)+"",.Stage2[.Level],.Stage2[.Level+1],strnpcinfo(0)+"::OnMob2ndKill";
	}
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnMob2ndKill" ) == 0 && .Level >= ( getarraysize( .Stage2 ) - 5 ) )
	{
		set .Level,.Level + 2;
		announce "Another protector of the first God is about to be summoned!",bc_map,0xFF0000,0,90;
		specialeffect 563;
		sleep2 2000;
		for( set .@t,5; .@t > 0; set .@t,.@t - 1 )
		{
			specialeffect 563;
			announce "The second protector of the first God will be summoned in "+.@t+" second(s)",bc_map,0xFF6633,0,60;
			sleep2 1000;
		}
		announce "["+.Stage2[.Level+1]+" x "+getmonsterinfo( .Stage2[.Level],0)+"]",bc_map,0xCCFF33;
		monster strcharinfo(3),0,0,"[God's Guard] "+getmonsterinfo( .Stage2[.Level],0)+"",.Stage2[.Level],.Stage2[.Level+1],strnpcinfo(0)+"::OnBoss2ndKill";
	}
	delwaitingroom;
	waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
	end;

OnBoss2ndKill:
	delwaitingroom;
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnBoss2ndKill" ) > 0 )
	{
		waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
		end;
	} else {
		goto OnMob3rdInit;
		end;
	}
	
OnMob3rdInit:
	set .Level,0;
	announce "The Stage number 3 has begun!",bc_map,0x66FF33,0,35;
	announce "["+.Stage3[.Level+1]+" x "+getmonsterinfo( .Stage3[.Level],0)+"]",bc_map,0xCCFF33;
	monster strcharinfo(3),0,0,"[Slave] "+getmonsterinfo( .Stage3[.Level],0)+"",.Stage3[.Level],.Stage3[.Level+1],strnpcinfo(0)+"::OnMob3rdKill";
	delwaitingroom;
	waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
	end;
	
OnMob3rdKill:
	delwaitingroom;
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnMob3rdKill" ) == 0 && .Level < ( getarraysize( .Stage3 ) - 5 ) )
	{
		set .Level,.Level + 2;
		waitingroom "["+((( getarraysize( .Stage3 )/2 ) - .Level/2) - 1)+"] Rounds to Go.",0;
		for( set .@t,5; .@t > 0; set .@t,.@t - 1 )
		{
			announce "New defenders will be summoned in "+.@t+" second(s)",bc_map,0x66FF33,0,35;
			sleep2 1000;
		}
		announce "["+.Stage3[.Level+1]+" x "+getmonsterinfo( .Stage3[.Level],0)+"]",bc_map,0xCCFF33;
		monster strcharinfo(3),0,0,"[Slave] "+getmonsterinfo( .Stage3[.Level],0)+"",.Stage3[.Level],.Stage3[.Level+1],strnpcinfo(0)+"::OnMob3rdKill";
	}
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnMob3rdKill" ) == 0 && .Level >= ( getarraysize( .Stage3 ) - 5 ) )
	{
		set .Level,.Level + 2;
		announce "Another protector of the first God is about to be summoned!",bc_map,0xFF0000,0,90;
		specialeffect 563;
		sleep2 2000;
		for( set .@t,5; .@t > 0; set .@t,.@t - 1 )
		{
			specialeffect 563;
			announce "The third protector of the first God will be summoned in "+.@t+" second(s)",bc_map,0xFF6633,0,60;
			sleep2 1000;
		}
		announce "["+.Stage3[.Level+1]+" x "+getmonsterinfo( .Stage3[.Level],0)+"]",bc_map,0xCCFF33;
		monster strcharinfo(3),0,0,"[God's Guard] "+getmonsterinfo( .Stage3[.Level],0)+"",.Stage3[.Level],.Stage3[.Level+1],strnpcinfo(0)+"::OnBoss3rdKill";
	}
	delwaitingroom;
	waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
	end;
	
OnBoss3rdKill:
	delwaitingroom;
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnBoss3rdKill" ) > 0 )
	{
		waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
		end;
	} else {
		goto OnMob4thInit;
		end;
	}

OnMob4thInit:
	set .Level,0;
	announce "The Stage number 4 has begun!",bc_map,0x66FF33,0,35;
	announce "["+.Stage4[.Level+1]+" x "+getmonsterinfo( .Stage4[.Level],0)+"]",bc_map,0xCCFF33;
	monster strcharinfo(3),0,0,"[Slave] "+getmonsterinfo( .Stage4[.Level],0)+"",.Stage4[.Level],.Stage4[.Level+1],strnpcinfo(0)+"::OnMob4thKill";
	delwaitingroom;
	waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
	end;
	
OnMob4thKill:
	delwaitingroom;
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnMob4thKill" ) == 0 && .Level < ( getarraysize( .Stage4 ) - 5 ) )
	{
		set .Level,.Level + 2;
		waitingroom "["+((( getarraysize( .Stage4 )/2 ) - .Level/2) - 1)+"] Rounds to Go.",0;
		for( set .@t,5; .@t > 0; set .@t,.@t - 1 )
		{
			announce "New defenders will be summoned in "+.@t+" second(s)",bc_map,0x66FF33,0,35;
			sleep2 1000;
		}
		announce "["+.Stage4[.Level+1]+" x "+getmonsterinfo( .Stage4[.Level],0)+"]",bc_map,0xCCFF33;
		monster strcharinfo(3),0,0,"[Slave] "+getmonsterinfo( .Stage4[.Level],0)+"",.Stage4[.Level],.Stage4[.Level+1],strnpcinfo(0)+"::OnMob4thKill";
	}
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnMob4thKill" ) == 0 && .Level >= ( getarraysize( .Stage4 ) - 5 ) )
	{
		set .Level,.Level + 2;
		announce "Another protector of the first God is about to be summoned!",bc_map,0xFF0000,0,90;
		specialeffect 563;
		sleep2 2000;
		for( set .@t,5; .@t > 0; set .@t,.@t - 1 )
		{
			specialeffect 563;
			announce "The fourth protector of the first God will be summoned in "+.@t+" second(s)",bc_map,0xFF6633,0,60;
			sleep2 1000;
		}
		announce "["+.Stage4[.Level+1]+" x "+getmonsterinfo( .Stage4[.Level],0)+"]",bc_map,0xCCFF33;
		monster strcharinfo(3),0,0,"[God's Guard] "+getmonsterinfo( .Stage4[.Level],0)+"",.Stage4[.Level],.Stage4[.Level+1],strnpcinfo(0)+"::OnBoss4thKill";
	}
	delwaitingroom;
	waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
	end;

OnBoss4thKill:
	delwaitingroom;
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnBoss4thKill" ) > 0 )
	{
		waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
		end;
	} else {
		goto OnMob5thInit;
		end;
	}

OnMob5thInit:
	set .Level,0;
	announce "The Stage 5 has begun!",bc_map,0x66FF33,0,35;
	announce "["+.Stage5[.Level+1]+" x "+getmonsterinfo( .Stage5[.Level],0)+"]",bc_map,0xCCFF33;
	monster strcharinfo(3),0,0,"[Slave] "+getmonsterinfo( .Stage5[.Level],0)+"",.Stage5[.Level],.Stage5[.Level+1],strnpcinfo(0)+"::OnMob5thKill";
	delwaitingroom;
	waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
	end;
	
OnMob5thKill:
	delwaitingroom;
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnMob5thKill" ) == 0 && .Level < ( getarraysize( .Stage5 ) - 5 ) )
	{
		set .Level,.Level + 2;
		waitingroom "["+((( getarraysize( .Stage5 )/2 ) - .Level/2) - 1)+"] Rounds to Go.",0;
		for( set .@t,5; .@t > 0; set .@t,.@t - 1 )
		{
			announce "New defenders will be summoned in "+.@t+" second(s)",bc_map,0x66FF33,0,35;
			sleep2 1000;
		}
		announce "["+.Stage5[.Level+1]+" x "+getmonsterinfo( .Stage5[.Level],0)+"]",bc_map,0xCCFF33;
		monster strcharinfo(3),0,0,"[Slave] "+getmonsterinfo( .Stage5[.Level],0)+"",.Stage5[.Level],.Stage5[.Level+1],strnpcinfo(0)+"::OnMob5thKill";
	}
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnMob5thKill" ) == 0 && .Level >= ( getarraysize( .Stage5 ) - 5 ) )
	{
		set .Level,.Level + 2;
		announce "Another protector of the first God is about to be summoned!",bc_map,0xFF0000,0,90;
		specialeffect 563;
		sleep2 2000;
		for( set .@t,5; .@t > 0; set .@t,.@t - 1 )
		{
			specialeffect 563;
			announce "The fifth and last protector of the first God will be summoned in "+.@t+" second(s)",bc_map,0xFF6633,0,60;
			sleep2 1000;
		}
		announce "[ "+.Stage5[.Level+1]+" x "+getmonsterinfo( .Stage5[.Level],0)+" ]",bc_map,0xCCFF33;
		monster strcharinfo(3),0,0,"[God's Guard] "+getmonsterinfo( .Stage5[.Level],0)+"",.Stage5[.Level],.Stage5[.Level+1],strnpcinfo(0)+"::OnBoss5thKill";
	}
	delwaitingroom;
	waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
	end;

OnBoss5thKill:
	delwaitingroom;
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnBoss5thKill" ) > 0 )
	{
		waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
		end;
	} else {
		goto OnBossInit;
		end;
	}

OnBossInit:
	set .Level,0;
	announce "The final Stage has begun! Do your best to defeat the first of the five angry Gods!",bc_map,0x66FF33,0,35;
	announce "["+.Boss[.Level+1]+" x "+getmonsterinfo( .Boss[.Level],0)+"]",bc_map,0xCCFF33;
	monster strcharinfo(3),0,0,"[First GOD] "+getmonsterinfo( .Boss[.Level],0)+"",.Boss[.Level],.Boss[.Level+1],strnpcinfo(0)+"::OnBossKill";
	delwaitingroom;
	waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
	end;

OnBossKill:
	delwaitingroom;
	if( mobcount( strcharinfo(3),strnpcinfo(0)+"::OnBossKill" ) > 0 )
	{
		waitingroom "["+mobcount(strcharinfo(3), "all")+"] monster(s) left",0;
		end;
	} else {
		delwaitingroom;
		waitingroom "Rewards!",0;
		announce "The Team ["+getpartyname( getcharid(1) )+"] has just defeated the God of the Gods!",0;
		getpartymember getcharid(1),1;
		getpartymember getcharid(1),2;
		set @Location$,strcharinfo(3);
		for ( set .@i, 0; .@i < $@partymembercount; set .@i, .@i +1 )
		{
			if ( isloggedin($@partymemberaid[.@i]) )
			{
				attachrid $@partymemberaid[.@i];
				if( strcharinfo(3) == @Location$ )
				{
					unittalk getcharid(3),"We saved Midgard from the angry Gods!";
					unitemote getcharid(3),e_heh;
					specialeffect2 347;
					specialeffect2 709;
					for( set .@a,0; .@a < getarraysize( .Reward ); set .@a,.@a + 2 )
						getitem .Reward[.@a],.Reward[.@a+1], $@partymemberaid[.@i];
					dispbottom "You have been rewarded for saving Midgard.";
				}
			}
		}
		sleep2 5000;
		mapwarp strcharinfo(3),"prontera",155,180;
		set .Level,0;
		delwaitingroom;
	}
	

	
OnInit:
	waitingroom "Click me!",0;
	end;
} // END 
royal_room3,111,120,3	script	Instance Manager#R	56,{

while(1) {
	mes "[Instance Dungeon Manager]";
	mes "Welcome... ^FF0000"+strcharinfo(0)+"^000000";
	mes "Nighogg and his arm have gone to far! he decided to punish us all, showing no mercy...";
	mes "As you may have noticed, Prontera is about to be totally destroyed.";
	next;
	mes "[Instance Dungeon Manager]";
	mes "For the salvation of Prontera, the angry Nighogg must be defeated.";
	mes "Would you like to become a legend? Would you like your name to be remembered forever?";
	mes "Then... register your party and defeat him!";
	next;
	mes "[Instance Dungeon Manager]";
	mes "[Warning]: ^ff0000The party leader is the only one that is allowed to register the party.^000000";
	mes "[Status]: " +( getmapusers(.Map$) > 0 ?"^FF0000OFF":"^0000FFON")+"^000000";
	next;
switch(select("Information",
			( getmapusers(.Map$) > 0 || getcharid(0) != getpartyleader( getcharid(1),2 ) )?"":"Register",
			( getmapusers(.Map$) < 1 || getgmlevel() < 99 )?"":"^FF0000Reset^000000")) {
			
	Case 1:
		mes "[Instance Dungeon Manager]";
		mes "By entering the Dungeon, the destiny of Prontera and the people who live in is in your hands.";
		mes "You'll have too kill many defenders, Nighoggs Army and, once you killed them all, The beast himself.";
		next;
		mes "[Instance Dungeon Manager]";
		mes "If you manage to complete the task, you will get some ^FF0000awesome^000000 prizes.";
		next;
		mes "[Instance Dungeon Manager]";
		mes "In order to register your party, the members must meet the following requirements:";
		mes " ";
		mes "^777777Base Level^000000: "+.Level+" Level";
		mes "^777777Item(s)^000000: "+.amount+" x "+getitemname(.ticket);
		mes "^777777Party Member(s)^000000: "+.PartyMember+" Members";
		next;
		mes "[Instance Dungeon Manager]";
		mes " ";
		mes "[^FF9933Warning^000000]: Base Level and the item(s) required only concern the leader of the party.";
		mes " ";
		mes "^ff0000Ask your party members for the required item(s), then!^000000";
		next;
		close;
	Case 2:
		getpartymember getcharid(1),1;
		getpartymember getcharid(1),2;
		set @Count,0;
		for ( set .@i, 0; .@i < $@partymembercount; set .@i, .@i +1 ){
			if ( isloggedin($@partymemberaid[.@i]) ){
				set @Count,@Count+1;
				}
			}
		if( @Count < .PartyMember || BaseLevel < .Level || countitem(.ticket) < .amount ){
		mes "[Instance Dungeon Manager]";
		mes "You are missing one or more requirements...";
		mes "Please, select ^0000ffInformation^000000 and check what you are missing.";
		close;
		} else {
			delitem .ticket, .amount;
			mes "[Instance Dungeon Manager]";
			mes "^ff0000You are about to be teleported to the Dungeon!^000000";
			delwaitingroom "Quest Dungeon Helper";
			close2;
			announce "Team ["+getpartyname( getcharid(1) )+"] has just started the Instance Dungeon number 1.",0;
			dispbottom "Click the NPC named Quest Dungeon Helper to start the adventure.";
			warpparty .Map$,244,60,getcharid(1);
			killmonster .Map$,"All";
			set getvariableofnpc(.Level,"Quest Dungeon Helper"),0;
			end;
		}
	Case 3:
		mes "[Instance Dungeon Manager]";
		mes "The system has been reset.";
		killmonster .Map$,"All";
		mapwarp .Map$,"prontera",150,150;
		announce "A GM has RESET the dungeon, sorry for the inconvenience.",0;
		set getvariableofnpc(.Level,"Quest Dungeon Helper"),0;
		delwaitingroom "Quest Dungeon Helper";
		next;
		break;
	}
}
close;

OnInit:
	waitingroom "Instance Dungeon [1]",0;
OnWhisperGlobal:
	set .Level,1;
	set .ticket, 6024;
	set .amount, 50;
	set .PartyMember,0;
	set .Map$,"lhz_dun04";
	while(sleep2(1000))
	{
		delwaitingroom;
		waitingroom ( getmapusers(.Map$) > 0 ? "  NOT":"   " )+" Available",0;
	}
	end;
}