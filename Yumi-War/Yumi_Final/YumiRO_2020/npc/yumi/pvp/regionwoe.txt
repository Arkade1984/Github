//Hey, I added a OnWhisper on line 62. But the npc returns "script: getelementofarray: index out of range" whenever I try to onstart with a whisp - Gus
//Reply by RC: You should add another variable declaration. I've added code there. Check now

-	script	RegWoECtrl	-,{
OnInit:
//Configs
setarray $RWOE_maps$[0],"prontera","izlude","geffen","alberta";
setarray $RWOE_reg_num[0],1,1,1,1; // Region Number
setarray $RWOE_empx[0],0,0,0,0;
setarray $RWOE_empy[0],0,0,0,0;
//Start Day and Time - 2 rows
setarray $RWOE_s_day[0],0,0,0,0; //0 - Sunday, 6 - Saturday
setarray $RWOE_s_hour[0],19,19,19,19; //Only Hours supported. Minutes not supported
//End Day and Time - 2 rows
setarray $RWOE_e_day[0],0,0,0,0; //0 - Sunday, 6 - Saturday
setarray $RWOE_e_hour[0],21,21,21,21;
setarray $RWOE_e_min[0],30,30,30,30; //Only 30 minutes supported. Do not change the value
//////////////////////End Time feature not yet added!!!

set $RWOE_cur_index,-1;
end;

OnHour00:
OnHour01:
OnHour02:
OnHour03:
OnHour04:
OnHour05:
OnHour06:
OnHour07:
OnHour08:
OnHour09:
OnHour10:
OnHour11:
OnHour12:
OnHour13:
OnHour14:
OnHour15:
OnHour16:
OnHour17:
OnHour18:
OnHour19:
OnHour20:
OnHour21:
OnHour22:
OnHour23:
OnHour24:
	for(set .@i, 0; .@i < getarraysize($RWOE_maps$); set .@i, .@i + 1)
	{
		if(gettime(4) == $RWOE_s_day[.@i])
		{
			if(gettime(3) == $RWOE_s_hour[.@i])
			{
				set $RWOE_cur_index, .@i;
				donpcevent "RegWoECtrl::OnStart";
				break;
			}
		}
	}
	end;
	

OnWhisperGlobal: 
if (@whispervar0$ == "start") {
set $RWOE_cur_index, .@i; //Replace with region index. 0 to n - 1, where n is region number
donpcevent "RegWoECtrl::OnStart";
}

	
OnStart:
	maprespawnguildid $RWOE_maps$[$RWOE_cur_index],$RWOE_reg_num[$RWOE_cur_index],6;
	setmapflag $RWOE_maps$[$RWOE_cur_index],mf_nomemo;
	setmapflag $RWOE_maps$[$RWOE_cur_index],mf_noteleport;
	setmapflag $RWOE_maps$[$RWOE_cur_index],mf_nowarp;
	setmapflag $RWOE_maps$[$RWOE_cur_index],mf_nogo;
	setmapflag $RWOE_maps$[$RWOE_cur_index],mf_nosave;
	setmapflag $RWOE_maps$[$RWOE_cur_index],mf_nobranch;
	setmapflag $RWOE_maps$[$RWOE_cur_index],mf_gvg;
	setmapflag $RWOE_maps$[$RWOE_cur_index],mf_gvg_noparty;
	setmapflag $RWOE_maps$[$RWOE_cur_index],mf_notrade;
	setmapflag $RWOE_maps$[$RWOE_cur_index],mf_novending;
	setmapflag $RWOE_maps$[$RWOE_cur_index],mf_noicewall;
	monster $RWOE_maps$[$RWOE_cur_index],$RWOE_empx[$RWOE_cur_index],$RWOE_empy[$RWOE_cur_index],"Emperium",1288,1,"RegWoECtrl::OnEmpDead";
	announce "The Region WoE has begun for the Prontera Region!",0;
	initnpctimer;
	end;
	
OnEmpRespawn:
	maprespawnguildid $RWOE_maps$[$RWOE_cur_index],$RWOE_reg_num[$RWOE_cur_index],6;
	monster $RWOE_maps$[$RWOE_cur_index],$RWOE_empx[$RWOE_cur_index],$RWOE_empy[$RWOE_cur_index],"Emperium",1288,1,"RegWoECtrl::OnEmpDead";
	end;
	
OnEmpDead:
	set .@gid,getcharid(2);
	announce strcharinfo(0) + " has broken the emperium for " + $RWOE_maps$[$RWOE_cur_index] + " Region! " + getguildname(.@gid) + " guild now owns the Prontera Region!",0;
	set $Region[$RWOE_reg_num[$RWOE_cur_index]],.@gid; //Set Region owner
	sleep 2000;
	donpcevent "RegWoECtrl::OnEmpRespawn";
	end;
	
OnEnd:
	announce "Region WoE has ended for " + $RWOE_maps$[$RWOE_cur_index] + " Region. The guild - " + getguildname($RWOE_reg_num[$RWOE_cur_index]) + " - are now the owners of the Prontera Region",0;
	maprespawnguildid $RWOE_maps$[$RWOE_cur_index],$RWOE_reg_num[$RWOE_cur_index],6;
	removemapflag $RWOE_maps$[$RWOE_cur_index],mf_nomemo;
	removemapflag $RWOE_maps$[$RWOE_cur_index],mf_noteleport;
	removemapflag $RWOE_maps$[$RWOE_cur_index],mf_nowarp;
	removemapflag $RWOE_maps$[$RWOE_cur_index],mf_nogo;
	removemapflag $RWOE_maps$[$RWOE_cur_index],mf_nosave;
	removemapflag $RWOE_maps$[$RWOE_cur_index],mf_nobranch;
	removemapflag $RWOE_maps$[$RWOE_cur_index],mf_gvg;
	removemapflag $RWOE_maps$[$RWOE_cur_index],mf_gvg_noparty;
	removemapflag $RWOE_maps$[$RWOE_cur_index],mf_notrade;
	removemapflag $RWOE_maps$[$RWOE_cur_index],mf_novending;
	removemapflag $RWOE_maps$[$RWOE_cur_index],mf_noicewall;
	set $RWOE_cur_index, -1;
	end;
	
OnTimer3000000:
	announce "1 Minute left in " + $RWOE_maps$[$RWOE_cur_index] + " Region WoE",0;
	end;
OnTimer3600000:
	announce "The " + $RWOE_maps$[$RWOE_cur_index] + " Region WoE has ended",0;
	donpcevent "RegWoECtrl::OnEnd";
	end;
}