//===== eAthena Script ======================================
//= MVP/Branch Room
//===== By: ===============================================
//= by ~AnnieRuru~
//===== Current Version: ======================================
//= 1.0
//===== Compatible With: ===================================== 
//= eAthena 11650 Trunk above or 11863 Stable above
//===== Description: ========================================= 
//= Player can rent MVP room for the player him/herself, for party or for guilds
//===== Additional Comments: ================================== 
//= 1.0 
//= ---- break the tradition which a script only for a player, or only for a party.
//=      now 1 room can be use for party and another room can use for guilds.
//= ---- timeout feature to prevent player owns the room indefinitely,
//=      by create a new account and sit inside overnight.
//= ---- can disable mvp/boss summon via configuration and becomes a branch room script.
//= ---- a double check to prevent players rent all the rooms for himself.
//========================================================
zephyr,255,44,4	script	Private MVP Room	100,{
	mes "[Private MVP Room]";
	mes "Please select a private MVP room.";
	if ( getvariableofnpc(.rentcost, "MVP Summoner") )
		mes "The cost to rent a room for "+ getvariableofnpc(.timeout, "MVP Summoner") +" minutes is "+ callfunc("int__", getvariableofnpc(.rentcost, "MVP Summoner") ) +" zeny.";
	else
		mes "You can only use the room for only "+ getvariableofnpc(.timeout, "MVP Summoner") +" minutes.";
	mes " ";
	for ( set .@i, 1; .@i <= 8; set .@i, .@i +1 ) {
		if ( getvariableofnpc(.hour[.@i],"MVP Summoner") || getvariableofnpc(.min[.@i],"MVP Summoner") || getvariableofnpc(.sec[.@i],"MVP Summoner") )
			switch ( .type[.@i] ) {
				case 1: set .@color$, "^EE8800"; break;
				case 2: set .@color$, "^70CC11"; break;
				case 3: set .@color$, "^0000FF"; break;
				default: set .@color$, "^000000";
			}
			mes "Room #"+ .@i +" = "+ .@color$ + .whoinuse$[.@i] +"^000000";
	}
	next;
	set .@room, select("MVP Room 1 ["+ getmapusers("06guild_01") +"]",
	"MVP Room 2 ["+ getmapusers("06guild_02") +"]",
	"MVP Room 3 ["+ getmapusers("06guild_03") +"]",
	"MVP Room 4 ["+ getmapusers("06guild_04") +"]",
	"MVP Room 5 ["+ getmapusers("06guild_05") +"]",
	"MVP Room 6 ["+ getmapusers("06guild_06") +"]",
	"MVP Room 7 ["+ getmapusers("06guild_07") +"]",
	"MVP Room 8 ["+ getmapusers("06guild_08") +"]");
	if ( getvariableofnpc(.hour[.@room],"MVP Summoner") || getvariableofnpc(.min[.@room],"MVP Summoner") || getvariableofnpc(.sec[.@room],"MVP Summoner") ) {
		if ( .inuseid[.@room] == getcharid(.type[.@room]) ) {
			if ( !getmapusers("06guild_0"+ .@room) )
				killmonsterall "06guild_0"+ .@room;
			warp "06guild_0"+ .@room, 0,0;
			end;
		} else {
			mes "[Private MVP Room]";
			switch ( .type[.@room] ) {
				case 1: set .@color$, "^EE8800Party "; break;
				case 2: set .@color$, "^70CC11Guild "; break;
				case 3: set .@color$, "^0000FFPlayer "; break;
				default: set .@color$, "^000000ERROR ";
			}
			mes "This room is reserved for ";
			mes .@color$ + .whoinuse$[.@room] +"^000000 .";
			mes "Please select another.";
			close;
		}
	}
	mes "[Private MVP Room]";
	if ( zeny < getvariableofnpc(.rentcost, "MVP Summoner") ) {
		mes "You don't have enough zeny to rent a room.";
		close;
	}
	mes "You reserve this room for ...";
	next;
	set .@type, select("For my party members", "For my guild members", "For personal account use" );
	if ( !getcharid(.@type) ) {
		mes "[Private MVP Room]";
		mes "You do not own a "+( (.@type == 1)?"Party":"Guild" )+".";
		close;
	}
	for ( set .@i, 1; .@i <= 8; set .@i, .@i +1 ) {
		if ( ( getvariableofnpc(.hour[.@room],"MVP Summoner") || getvariableofnpc(.min[.@room],"MVP Summoner") || getvariableofnpc(.sec[.@room],"MVP Summoner") )&& .@type == .type[.@i] && getcharid(.@type) == .inuseid[.@i] ) {
			mes "[Private MVP Room]";
			mes "You already rented Room#"+ .@i +". Use that room instead.";
			close;
		}
	}
	set .type[.@room], .@type;
	set .inuseid[.@room], getcharid(.@type);
	set .whoinuse$[.@room], strcharinfo( (.@type == 3)?0:.@type );
	set zeny, zeny - getvariableofnpc(.rentcost, "MVP Summoner");
	warp "06guild_0"+ .@room, 0,0;
	killmonsterall "06guild_0"+ .@room;
	donpcevent "MVP Summoner#"+ .@room +"::OnEnterMap";
	end;
}


-	script	MVP Summoner	-1,{
	mes "[MVP Summoner]";
	mes "Hi, what can do for you ?";
	next;
	switch ( select("Heal","What is this Room For?","What do you get after killing mvp?","Where to buy badges from?","Leave this Room","Give Up this Room") ) {
		case 1:
			sc_end sc_stone;
			sc_end sc_freeze;
			sc_end sc_sleep;
			sc_end sc_curse;
			sc_end sc_silence;
			sc_end sc_confusion;
			sc_end sc_blind;
			sc_end sc_bleeding;
			sc_end sc_decreaseagi;
			sc_end sc_poison;
			sc_end sc_hallucination;
			sc_end sc_stripweapon;
			sc_end sc_striparmor;
			sc_end sc_striphelm;
			sc_end sc_stripshield;
			sc_end sc_orcish;
			sc_end sc_berserk;
			sc_end sc_ske;
			sc_end sc_swoo;
			sc_end sc_ska;
			percentheal 100,100;
			specialeffect2 7;
			mes "You have completely healed.";
			close;
		case 2:
			mes "This is a Room where you are allowed to use Bloody Branch";
			mes "The Room is available for a certian time and with protection";
			mes "Check Forums for more Info";
			close;
		case 3:
			mes "Well, Once a MVP is killed, you can get Badge Box";
			mes "Each box contains 1000 Cash Points!";
			close;
		case 4:
			mes "Branches are available in Telma's Shop";
			mes "Visit her Shop to buy a branch";
			Close;
		case 5:
			mes "[MVP Summoner]";
			mes "Are you sure you want to leave this room ?";
			mes "If this room left empty for more than "+ .nobodygiveup +" minutes, you lost ownership for this room.";
			if ( select( "Yes:No") == 2 ) close;
			warp .respawnmap$, .respawnx, .respawny;
			end;
		case 6:
			mes "[MVP Summoner]";
			getmapxy .@map$, .@x, .@y, 0;
			if ( getmapusers(.@map$) > 1 ) {
				mes "There are still some players in this room. Make sure you are the last member in this room to use this option.";
				close;
			}
			mes "Are you sure you want to give up this room ?";
			if ( .rentcost )
				mes "You will need to pay again to enter this room.";
			next;
			if ( select( "Yes:No" ) == 2 ) close;
			warp .respawnmap$, .respawnx, .respawny;
			set .@dif, strnpcinfo(2);
			if ( .hour[.@dif] || .min[.@dif] || .sec[.@dif] ) {
				set .hour[.@dif], 0;
				set .min[.@dif], 0;
				set .sec[.@dif], 1;
			}
			end;
	}
	close;

OnEnterMap:
	set .@dif, strnpcinfo(2);
	set .nobodycounter[.@dif], 0;
	getmapxy .@map$, .@x, .@y ,1;
	set .min[.@dif], .timeout;
	while ( .min[.@dif] >= 60 ) {
		set .hour[.@dif], .hour[.@dif] +1 ;
		set .min[.@dif], .min[.@dif] - 60 ;
	}
	while ( .hour[.@dif] || .min[.@dif] || .sec[.@dif] ) {
		set .sec[.@dif], .sec[.@dif] -1 ;
		if ( .sec[.@dif] < 0 && ( .min[.@dif] > 0 || .hour[.@dif] > 0 ) ) {
			set .sec[.@dif], .sec[.@dif] + 60;
			set .min[.@dif], .min[.@dif] - 1 ;
		}
		if ( .min[.@dif] < 0 && .hour[.@dif] > 0 ) {
			set .min[.@dif], .min[.@dif] + 60;
			set .hour[.@dif], .hour[.@dif] - 1;
		}
		waitingroom "Time Left = "+( ( .hour[.@dif] )?( .hour[.@dif] +":"):"" )+( ( .min[.@dif] < 10 )?"0"+ .min[.@dif]: .min[.@dif] )+":"+( ( .sec[.@dif] < 10 )?"0"+ .sec[.@dif]: .sec[.@dif] ), 0;
		if ( getmapusers(.@map$) ) {
			set .nobodycounter[.@dif], 0;
		} else {
			set .nobodycounter[.@dif], .nobodycounter[.@dif] +1 ;
			if ( .nobodycounter[.@dif] > .nobodygiveup * 60 ) {
				set .hour[.@dif], 0;
				set .min[.@dif], 0;
				set .sec[.@dif], 0;
				break;
			}
		}
		sleep 99;
	}
	delwaitingroom "MVP Summoner#"+ .@dif;
	mapwarp .@map$, .respawnmap$, .respawnx, .respawny;
	end;


	if ( !.timeout ) set .timeout, 60;
	if ( !.nobodygiveup ) set .nobodygiveup, 5;

	set .menu$, ( (.@menu[1])?"Heal:":":" )+( (.@menu[2])?"What is this Room for?:":":" )+( (.@menu[3])?"What Will I get after killing mvp's:":":" )+( (.@menu[4])?"Where to buy Branches:":":" )+"Leave this room:Give up this room";

	if ( .@menu[2] ) {
		set .mvpid_menu$, getmonsterinfo(.mvpid, 0);
		for ( set .@i, 1; .@i < getarraysize(.mvpid); set .@i, .@i +1 )
			set .mvpid_menu$, .mvpid_menu$ +":"+ getmonsterinfo(.mvpid[.@i], 0);
	}

	if ( .@menu[3] ) {
	set .bossid_menu$, getmonsterinfo(.bossid, 0);
	for ( set .@i, 1; .@i < getarraysize(.bossid); set .@i, .@i +1 )
		set .bossid_menu$, .bossid_menu$ +":"+ getmonsterinfo(.bossid[.@i], 0);
	}

	end;
}

-	shop	MVP room#branch	-1,604:100000,12103:1000000

06guild_01,49,49,4	duplicate(MVP Summoner)	MVP Summoner#1	116
06guild_02,49,49,4	duplicate(MVP Summoner)	MVP Summoner#2	116
06guild_03,49,49,4	duplicate(MVP Summoner)	MVP Summoner#3	116
06guild_04,49,49,4	duplicate(MVP Summoner)	MVP Summoner#4	116
06guild_05,49,49,4	duplicate(MVP Summoner)	MVP Summoner#5	116
06guild_06,49,49,4	duplicate(MVP Summoner)	MVP Summoner#6	116
06guild_07,49,49,4	duplicate(MVP Summoner)	MVP Summoner#7	116
06guild_08,49,49,4	duplicate(MVP Summoner)	MVP Summoner#8	116

06guild_01	mapflag	nowarpto
06guild_02	mapflag	nowarpto
06guild_03	mapflag	nowarpto
06guild_04	mapflag	nowarpto
06guild_05	mapflag	nowarpto
06guild_06	mapflag	nowarpto
06guild_07	mapflag	nowarpto
06guild_08	mapflag	nowarpto
06guild_01	mapflag	nomemo
06guild_02	mapflag	nomemo
06guild_03	mapflag	nomemo
06guild_04	mapflag	nomemo
06guild_05	mapflag	nomemo
06guild_06	mapflag	nomemo
06guild_07	mapflag	nomemo
06guild_08	mapflag	nomemo
06guild_01	mapflag	noteleport
06guild_02	mapflag	noteleport
06guild_03	mapflag	noteleport
06guild_04	mapflag	noteleport
06guild_05	mapflag	noteleport
06guild_06	mapflag	noteleport
06guild_07	mapflag	noteleport
06guild_08	mapflag	noteleport
06guild_01	mapflag	nosave	SavePoint
06guild_02	mapflag	nosave	SavePoint
06guild_03	mapflag	nosave	SavePoint
06guild_04	mapflag	nosave	SavePoint
06guild_05	mapflag	nosave	SavePoint
06guild_06	mapflag	nosave	SavePoint
06guild_07	mapflag	nosave	SavePoint
06guild_08	mapflag	nosave	SavePoint